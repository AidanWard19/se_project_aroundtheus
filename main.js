!function(){"use strict";const e=document.querySelector(".profile__edit-button"),t=document.querySelector("#edit-modal"),s=(t.querySelector(".modal__close"),document.querySelector(".modal__name")),r=document.querySelector(".modal__title"),n=(document.querySelector(".profile__name"),document.querySelector(".profile__title"),document.querySelector("#add-modal")),o=document.querySelector(".profile__add-button"),i=(n.querySelector(".modal__close"),document.querySelector("#image-modal").querySelector(".modal__close"),document.querySelector(".gallery__cards"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__text-underline-red",errorClass:"modal__error_visible"}),l=t.querySelector(".modal__form"),a=document.querySelector(".profile__picture-overlay"),d=document.querySelector(".profile__picture"),c=document.querySelector("#avatar-modal").querySelector(".modal__form"),_=document.querySelector("#confirm-modal");_.querySelector(".modal__button"),_.querySelector(".modal__form");class h{constructor(e,t,s,r,n,o){this._name=e.name,this._link=e.link,this._cardId=e._id,this._likedState=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleAddLike=r,this._handleRemoveLike=n,this._handleAttemptDelete=o,console.log(e)}_setEventListeners(){this._imageDeleteBtn.addEventListener("click",(()=>{console.log(this._cardElement,this._cardId),this._handleAttemptDelete(this._cardElement,this._cardId,this)})),this._likeButton.addEventListener("click",(()=>{this._likedState?this._handleRemoveLike(this,this._cardId):this._handleAddLike(this,this._cardId)})),this._cardImageElement.addEventListener("click",(()=>this._handleImageClick(this._cardImageElement)))}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}setLikeState(e){this._likedState=e,this._likedState?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setCardElements(){this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardImageElement.alt=this._name,this._cardImageElement.src=this._link,this._cardTitleElement.textContent=this._name,this.setLikeState(this._likedState)}getView(){return this._cardElement=this._getTemplate(),this._cardTitleElement=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._imageDeleteBtn=this._cardElement.querySelector(".card__delete"),this._setCardElements(),this._setEventListeners(),this._cardElement}}class u{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);this._formElement.querySelector(`#${e.id}-redline`).classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);this._formElement.querySelector(`#${e.id}-redline`).classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(e,t){this._hasInvalidInput(e)?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}_setSubmitListener(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()}))}_setEventListeners(){this._setSubmitListener(),this._inputElements.forEach((e=>{this._hideInputError(e),e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputElements,this._submitButton)}))}))}resetValidation(){this._toggleButtonState(this._inputElements,this._submitButton),this._inputElements.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._setEventListeners()}}class m{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),console.log(this._popupElement),this._closeButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._closeOnRemoteClick)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._closeOnRemoteClick)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_closeOnRemoteClick=e=>{e.target===e.currentTarget&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()}))}}class p extends m{constructor(e,t,s){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),console.log(this._popupForm),this._handleFormSubmit=t,console.log(this._closeButton),this._submitButton=this._popupForm.querySelector(".modal__button"),this._initialButtonText=s}close(){this._popupForm.reset(),super.close()}renderLoading(e){e?"Save"===this._initialButtonText?this._submitButton.textContent="Saving...":"Create"===this._initialButtonText&&(this._submitButton.textContent="Creating..."):this._submitButton.textContent=this._initialButtonText}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input");console.log(e);const t={};return e.forEach((e=>t[e.name]=e.value)),console.log(t),t}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}class E{constructor(e,t){let{items:s,renderer:r}=e;this._renderer=r,this._items=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}const S=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_handleRes(e){if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleRes)}editUserInfo(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._handleRes)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleRes)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleRes)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleRes)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleRes)}updateProfilePic(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then(this._handleRes)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleRes)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"799c4be9-a1c3-44a2-bda1-67abb1e7f630","Content-Type":"application/json"}}),v=new p("#add-modal",(function(e){v.renderLoading(!0),S.addCard(e).then((e=>{I(e)})).then((()=>{v.close()})).catch((e=>{console.error(e)})).finally((()=>{v.renderLoading(!1)}))}),"Create");v.setEventListeners();const f=new p("#edit-modal",(function(e){f.renderLoading(!0),S.editUserInfo(e).then((e=>{q.setUserInfo(e)})).then((()=>{f.close()})).catch((e=>{console.error(e)})).finally((()=>{f.renderLoading(!1)}))}),"Save");f.setEventListeners();const g=new p("#avatar-modal",(function(e){g.renderLoading(!0),console.log(e),S.updateProfilePic(e).then((e=>{q.setUserInfo(e)})).then((()=>{g.close()})).catch((e=>console.error(e))).finally((()=>{g.renderLoading(!1)}))}),"Save");g.setEventListeners();const L=new class extends m{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__button"),this._deleteHandler=t}getCardInfo(e,t,s){this._cardElement=e,this._cardId=t,this._card=s,console.log(this._cardElement),console.log(this._cardId)}deleteConfirmed(e,t,s){this._deleteHandler(e,t,s)}renderLoading(e){this._submitButton.textContent=e?"Deleting...":"Yes"}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.deleteConfirmed(this._cardElement,this._cardId,this._card)})),super.setEventListeners()}}("#confirm-modal",(function(e,t,s){console.log(s),L.renderLoading(!0),S.deleteCard(t).then((()=>{e.remove(),e=null})).then((()=>{L.close()})).catch((e=>console.error(e))).finally((()=>{L.renderLoading(!1)}))}));L.setEventListeners();const y=new class extends m{constructor(e){super({popupSelector:e}),this._imageElement=this._popupElement.querySelector(".modal__image-preview"),this._imageCaption=this._popupElement.querySelector(".modal__image-caption")}open(e){this._imageElement.src=e.link,this._imageElement.alt=e.name,this._imageCaption.textContent=e.name,super.open()}}("#image-modal");y.setEventListeners();const b=new u(i,l);b.enableValidation();const k=new u(i,n.querySelector(".modal__form"));k.enableValidation();const C=new u(i,c);C.enableValidation();const q=new class{constructor(e,t,s){this._name=document.querySelector(e),this._about=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar}}setUserInfo(e){let{name:t,about:s,avatar:r}=e;this._name.textContent=t,this._about.textContent=s,this._avatar.src=r}}(".profile__name",".profile__title",".profile__picture");function I(e){const t=new h(e,"#card-template",B,U,w,x);T.addItem(t.getView())}function B(e){const t={link:e.src,name:e.alt};y.open(t)}function U(e,t){S.addLike(t).then((t=>{console.log(t),e.setLikeState(t.isLiked)})).catch((e=>{console.error(e)}))}function w(e,t){S.removeLike(t).then((t=>{console.log(t),e.setLikeState(t.isLiked)})).catch((e=>{console.error(e)}))}function x(e,t,s){console.log(t),L.open(),L.getCardInfo(e,t,s)}let T;e.addEventListener("click",(()=>{const e=q.getUserInfo();s.value=e.name,r.value=e.about,b.resetValidation(),f.open()})),o.addEventListener("click",(()=>{k.resetValidation(),v.open()})),a.addEventListener("click",(()=>{C.resetValidation(),g.open()})),Promise.all([S.getUserInfo(),S.getInitialCards()]).then((e=>{let[t,s]=e;console.log(t),q.setUserInfo(t),d.src=t.avatar,T=new E({items:s,renderer:I},".gallery__cards"),T.renderItems()})).catch((e=>{console.error(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,