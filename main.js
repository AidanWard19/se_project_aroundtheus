!function(){"use strict";const e=document.querySelector(".profile__edit-button"),t=document.querySelector("#edit-modal"),s=(t.querySelector(".modal__close"),document.querySelector(".modal__name")),n=document.querySelector(".modal__title"),r=(document.querySelector(".profile__name"),document.querySelector(".profile__title"),document.querySelector("#add-modal")),o=document.querySelector(".profile__add-button"),i=(r.querySelector(".modal__close"),document.querySelector("#image-modal").querySelector(".modal__close")),l=(document.querySelector(".gallery__cards"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__text-underline-red",errorClass:"modal__error_visible"}),a=t.querySelector(".modal__form"),d=document.querySelector(".profile__picture-overlay"),c=document.querySelector(".profile__picture"),h=document.querySelector("#avatar-modal").querySelector(".modal__form"),_=document.querySelector("#confirm-modal");_.querySelector(".modal__button"),_.querySelector(".modal__form");class u{constructor(e,t,s,n,r,o){this._name=e.name,this._link=e.link,this._cardId=e._id,this._likedState=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleAddLike=n,this._handleRemoveLike=r,this._handleAttemptDelete=o,console.log(e)}_setEventListeners(){this._imageDeleteBtn.addEventListener("click",(()=>this._handleAttemptDelete(this._cardElement,this._cardId))),this._likeButton.addEventListener("click",(()=>{this._likedState?this._handleRemoveLike(this._cardId):this._handleAddLike(this._cardId)})),this._cardImageElement.addEventListener("click",(()=>this._handleImageClick(this._cardImageElement)))}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}setLikeState(e){this._likedState=e,this._likedState?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setCardElements(){this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardImageElement.alt=this._name,this._cardImageElement.src=this._link,this._cardTitleElement.textContent=this._name,this.setLikeState(this._likedState)}getView(){return this._cardElement=this._getTemplate(),this._cardTitleElement=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._imageDeleteBtn=this._cardElement.querySelector(".card__delete"),this._setCardElements(),this._setEventListeners(),this._cardElement}}class m{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);this._formElement.querySelector(`#${e.id}-redline`).classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);this._formElement.querySelector(`#${e.id}-redline`).classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(e,t){this._hasInvalidInput(e)?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}_setSubmitListener(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()}))}_setEventListeners(){this._setSubmitListener(),this._inputElements.forEach((e=>{this._hideInputError(e),e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputElements,this._submitButton)}))}))}resetValidation(){this._toggleButtonState(this._inputElements,this._submitButton),this._inputElements.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._setEventListeners()}}class p{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),console.log(this._popupElement),this._closeButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._closeOnRemoteClick)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._closeOnRemoteClick)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_closeOnRemoteClick=e=>{e.target===e.currentTarget&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()}))}}class E extends p{constructor(e,t,s){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),console.log(this._popupForm),this._handleFormSubmit=t,console.log(this._closeButton),this._submitButton=this._popupForm.querySelector(".modal__button"),this._initialButtonText=s}close(){this._popupForm.reset(),super.close()}renderLoading(e){e?"Save"===this._initialButtonText?this._submitButton.textContent="Saving...":"Create"===this._initialButtonText&&(this._submitButton.textContent="Creating..."):this._submitButton.textContent=this._initialButtonText}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input");console.log(e);const t={};return e.forEach((e=>t[e.name]=e.value)),console.log(t),t}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}class S{constructor(e,t){let{items:s,renderer:n}=e;this._renderer=n,this._items=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}const f=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_handleRes(e){if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleRes)}editUserInfo(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._handleRes)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleRes)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleRes)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleRes)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleRes)}updateProfilePic(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleRes)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleRes)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"799c4be9-a1c3-44a2-bda1-67abb1e7f630","Content-Type":"application/json"}}),v=new m(l,a);v.enableValidation();const g=new m(l,r.querySelector(".modal__form"));g.enableValidation(),new m(l,h).enableValidation();const L=new class{constructor(e,t){this._name=document.querySelector(e),this._about=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){let{name:t,about:s}=e;console.log(t),this._name.textContent=t,this._about.textContent=s,console.log(this._name.textContent)}}(".profile__name",".profile__title");function y(e){const t={link:e.src,name:e.alt};x.open(t)}function b(e){f.addLike(e).then((e=>{console.log(e),this.setLikeState(e.isLiked)})).catch((e=>{console.error(e)}))}function k(e){f.removeLike(e).then((e=>{console.log(e),this.setLikeState(e.isLiked)})).catch((e=>{console.error(e)}))}function C(e,t){I.open(),I.getCardInfo(e,t)}f.getUserInfo().then((e=>{L.setUserInfo(e)})).catch((e=>{console.error(e)}));const q=new E("#avatar-modal",(function(e){q.renderLoading(!0),f.updateProfilePic(e).then((()=>{c.src=e.link,q.close()})).catch((e=>console.error(e))).finally((()=>{q.renderLoading(!1)}))}),"Save");q.setEventListeners();const I=new class extends p{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__button"),this._deleteHandler=t}getCardInfo(e,t){this._cardElement=e,this._cardId=t}deleteConfirmed(e,t){this._deleteHandler(e,t)}renderLoading(e){this._submitButton.textContent=e?"Deleting...":"Yes"}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.deleteConfirmed(this._cardElement,this._cardId),this.close()})),super.setEventListeners()}}("#confirm-modal",(function(e,t){this.renderLoading(!0),f.deleteCard(t).then((()=>{this.close()})).then((()=>{e.remove(),e=null})).catch((e=>console.error(e))).finally((()=>{this.renderLoading(!1)}))}));I.setEventListeners(),e.addEventListener("click",(()=>{f.getUserInfo().then((e=>{s.value=e.name,n.value=e.about})).then((()=>{v.resetValidation()})).catch((e=>{console.error(e)})).finally((()=>{w.open()}))})),o.addEventListener("click",(()=>{g.resetValidation(),B.open()})),i.addEventListener("click",(()=>{x.close()})),d.addEventListener("click",(()=>{q.open()}));const B=new E("#add-modal",(function(e){B.renderLoading(!0),f.addCard(e).then((()=>{U(e),B.close()})).catch((e=>{console.error(e)})).finally((()=>{B.renderLoading(!1)}))}),"Create");B.setEventListeners();const w=new E("#edit-modal",(function(e){w.renderLoading(!0),f.editUserInfo(e).then((()=>{L.setUserInfo(e),w.close()})).catch((e=>{console.error(e)})).finally((()=>{w.renderLoading(!1)}))}),"Save");w.setEventListeners();const x=new class extends p{constructor(e){super({popupSelector:e}),this._imageElement=this._popupElement.querySelector(".modal__image-preview"),this._imageCaption=this._popupElement.querySelector(".modal__image-caption")}open(e){this._imageElement.src=e.link,this._imageElement.alt=e.name,this._imageCaption.textContent=e.name,super.open()}}("#image-modal");function U(e){const t=new u(e,"#card-template",y,b,k,C);T.addItem(t.getView())}let T;x.setEventListeners(),f.getInitialCards().then((e=>{T=new S({items:e,renderer:U},".gallery__cards"),T.renderItems()})).catch((e=>{console.error(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,